#!/usr/bin/env python
import argparse
import yaml
import logging
import threading
import traceback, sys
import facebooksms

parser = argparse.ArgumentParser(description="Facebook Negative One, a SMS interface.")

parser.add_argument('--from', '-f', action='store', dest='sender', \
    help="Sender of incoming message.")

parser.add_argument('--imsi', '-imsi', action='store', dest='imsi', \
    help="IMSI of sender.")

parser.add_argument('--to', '-t', action='store', dest='recipient', \
    help="Recipient of incoming message.")

parser.add_argument('--message', '-m', action='store', dest='message', \
    help="Body of incoming message.")

parser.add_argument('--config', '-c', action='store', dest='config', \
    help="Configuration file (default: ./conf/facebooksms.yaml)", \
    default="./conf/facebooksms.yaml")

parser.add_argument('--log', '-l', action='store', dest='logfile', \
    help="log file (default: ./log/facebooksms.log)", \
    default="./log/facebooksms.log")

parser.add_argument('--debug', action='store_true', dest='debug_mode', \
    help="enable debug logging.")
args = parser.parse_args()


conf_file = open(args.config, "r")
config_dict = yaml.load("".join(conf_file.readlines()))

log = logging.getLogger('facebooksms')
if args.debug_mode:
  logging.basicConfig(filename=args.logfile, level=logging.DEBUG)
else:
  logging.basicConfig(filename=args.logfile)

conf = facebooksms.Config(config_dict, log)

if not args.imsi and not args.sender and not args.recipient and not args.message:
  log.error("IMSI, Sender, recipient, and message args must be set for send mode")
else:
  app = facebooksms.FacebookSMS(args.imsi, conf)
  msg = facebooksms.Message(args.sender, args.recipient, None, args.message)
  try:
    app.handle_incoming_sms(msg)
  except Exception:
    e = sys.exc_info()
    traceback.print_exception(*e)
  finally:
   app._cleanup()


